---
- name: Provision Foundations Layer (Network, NSGs, Jump Host)
  hosts: localhost
  gather_facts: false

  vars:
    # ───── Path to Terraform foundations directory ─────
    foundations_dir: "{{ playbook_dir }}/../../terraform/foundations"

    # ───── Resource naming suffix ─────
    random_suffix: "dev01"

    # ───── Path to local SSH public key ─────
    ssh_key_path: "{{ lookup('env', 'HOME') + '/.ssh/ansible-demo-key.pub' }}"

  tasks:

    # ─────────────────────────────────────────────────────────────
    # Step 1: Validate and Load SSH Key
    # ─────────────────────────────────────────────────────────────

    - name: Ensure SSH public key file exists
      stat:
        path: "{{ ssh_key_path }}"
      register: ssh_key_check

    - name: Fail if SSH key file is missing
      fail:
        msg: "The SSH public key file was not found at {{ ssh_key_path }}"
      when: not ssh_key_check.stat.exists

    - name: Read SSH public key
      slurp:
        src: "{{ ssh_key_path }}"
      register: ssh_key_raw

    - name: Decode SSH key from base64
      set_fact:
        ssh_key_decoded: "{{ ssh_key_raw.content | b64decode }}"

    # ─────────────────────────────────────────────────────────────
    # Step 2: Initialize Terraform and Apply Foundations
    # ─────────────────────────────────────────────────────────────

    - name: Initialize Terraform in foundations dir
      command:
        cmd: terraform init
        chdir: "{{ foundations_dir }}"
      args:
        creates: "{{ foundations_dir }}/.terraform"
      changed_when: false  # Ensures idempotency for linting and reruns

    - name: Apply Terraform to provision foundations layer
      command:
        cmd: >
          terraform apply -auto-approve
          -var="random_suffix={{ random_suffix }}"
          -var="admin_ssh_public_key={{ ssh_key_decoded }}"
        chdir: "{{ foundations_dir }}"
      changed_when: false  # Prevents Ansible from showing this task as changed every time
