---
# ─────────────────────────────────────────────────────────────
# Playbook : bootstrap-ssh.yml   (merged version)
# Purpose  : ① copy the private key to the jump host
#            ② write an SSH config stanza
#            ③ scan & store the AAP host’s public key
#            ④ prove password-less SSH works
# ─────────────────────────────────────────────────────────────

- name: Bootstrap SSH connectivity from jump → AAP node
  hosts: jump
  gather_facts: false         # we don’t actually need full facts here

  vars:
    # ─────────────────────────────────────────────────────
    # User-tunable defaults (override with -e if required)
    # ─────────────────────────────────────────────────────
    ansible_user_dir: "/home/rheluser"

    # Where the **control** machine keeps the private key
    private_key_path: "{{ private_key_path | default('~/.ssh/ansible-demo-key') }}"

    # Final location for that key on the *jump* host
    jump_host_key_dest: "{{ ansible_user_dir }}/.ssh/ansible-demo-key"

    # Target AAP node details
    aap_host_ip: "{{ aap_host_ip   | default('10.0.1.12') }}"
    # use a helper var to prevent the old recursion error
    aap_port_val: "{{ (aap_port     | default(22)) | int }}"
    aap_target_user: "{{ aap_target_user | default('rheluser') }}"

    # Path to jump host’s known_hosts
    jump_known_hosts: "{{ ansible_user_dir }}/.ssh/known_hosts"

  tasks:
    # ─────────────────────────────────────────────────────
    # Step 0 – Sanity / debug
    # ─────────────────────────────────────────────────────
    - name: Show chosen parameters
      debug:
        msg: |
          ➤ AAP host : {{ aap_host_ip }}:{{ aap_port_val }}
          ➤ Key file : {{ jump_host_key_dest }}
          ➤ Jump user: {{ ansible_user | default('rheluser') }}
      changed_when: false

    # ─────────────────────────────────────────────────────
    # Step 1 – Copy key & set perms
    # ─────────────────────────────────────────────────────
    - name: Ensure ~/.ssh exists on jump host
      file:
        path: "{{ ansible_user_dir }}/.ssh"
        state: directory
        mode: "0700"

    # Copy runs from *control* → jump (default behaviour; no delegate needed)
    - name: Copy private SSH key onto jump host
      copy:
        src: "{{ private_key_path }}"       # path on control machine
        dest: "{{ jump_host_key_dest }}"    # path on jump host
        mode: "0600"

    # ─────────────────────────────────────────────────────
    # Step 2 – SSH client config stanza
    # ─────────────────────────────────────────────────────
    - name: Configure SSH client on jump host
      blockinfile:
        path: "{{ ansible_user_dir }}/.ssh/config"
        create: true
        mode: "0600"
        block: |
          Host 10.0.1.*
            User {{ aap_target_user }}
            IdentityFile {{ jump_host_key_dest }}
            IdentitiesOnly yes
            PubkeyAcceptedAlgorithms +ssh-rsa,ssh-dss,rsa-sha2-256,rsa-sha2-512,ssh-ed25519,ecdsa-sha2-nistp256,sk-ssh-ed25519@openssh.com,sk-ecdsa-sha2-nistp256@openssh.com
            HostKeyAlgorithms +ssh-rsa,ssh-dss,rsa-sha2-256,rsa-sha2-512,ssh-ed25519,ecdsa-sha2-nistp256,sk-ssh-ed25519@openssh.com,sk-ecdsa-sha2-nistp256@openssh.com
            KexAlgorithms +diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1
            Ciphers +aes128-cbc,aes192-cbc,aes256-cbc
            ConnectTimeout 10

    # ─────────────────────────────────────────────────────
    # Step 3 – Wait for AAP SSH port, scan key, add to known_hosts
    # ─────────────────────────────────────────────────────
    - name: Wait for SSH to be reachable on AAP host
      wait_for:
        host: "{{ aap_host_ip }}"
        port: "{{ aap_port_val }}"
        state: started
        timeout: 60
      changed_when: false

    - name: Scan AAP host public key
      command: "ssh-keyscan -T 5 -p {{ aap_port_val }} -H {{ aap_host_ip }}"
      register: keyscan_out
      changed_when: false
      retries: 3
      delay: 4
      until: keyscan_out.rc == 0 and keyscan_out.stdout | length > 0

    - name: Record AAP host key in known_hosts
      known_hosts:
        path: "{{ jump_known_hosts }}"
        name: "{{ aap_host_ip }}"
        key: "{{ keyscan_out.stdout }}"
        hash_host: true
        state: present

    # ─────────────────────────────────────────────────────
    # Step 4 – Prove password-less SSH works
    # ─────────────────────────────────────────────────────
    - name: Test password-less SSH connectivity
      shell: |
        ssh -o BatchMode=yes -o StrictHostKeyChecking=yes \
            -i {{ jump_host_key_dest }} \
            -p {{ aap_port_val }} \
            {{ aap_target_user }}@{{ aap_host_ip }} \
            'echo OK'
      register: ssh_test
      changed_when: false
      retries: 3
      delay: 5
      until: ssh_test.rc == 0 and 'OK' in ssh_test.stdout

    - name: SSH bootstrap complete
      debug:
        msg: "Password-less access to {{ aap_host_ip }} confirmed."
