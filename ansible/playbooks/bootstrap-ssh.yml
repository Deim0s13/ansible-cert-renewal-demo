---
# ─────────────────────────────────────────────────────────────
# Playbook : bootstrap-ssh.yml
# Purpose  : Prepare password-less SSH from the jump host to
#            the AAP node (add key + connectivity test).
# ─────────────────────────────────────────────────────────────

- name: Bootstrap SSH connectivity from Jump Host → AAP Host
  hosts: jump
  gather_facts: false
  vars:
    # ── Connection defaults (override via -e or inventory) ──
    aap_host_ip: "10.0.1.12"
    aap_port: "22"
    aap_target_user: "rheluser"
    aap_target_ssh_key: "/home/rheluser/.ssh/ansible-demo-key"

  tasks:

    # ─────────────────────────────────────────────────────
    # Step 0 – Echo what we’re about to do
    # ─────────────────────────────────────────────────────
    - name: Debug chosen SSH parameters
      ansible.builtin.debug:
        msg: >
          Preparing SSH from jump host → {{ aap_host_ip }}:{{ aap_port }}
          as {{ aap_target_user }} (key {{ aap_target_ssh_key }})

    # ─────────────────────────────────────────────────────
    # Step 1 – Build helper vars (host string & key-scan cmd)
    # ─────────────────────────────────────────────────────
    - name: Derive known_hosts entry + ssh-keyscan command
      ansible.builtin.set_fact:
        aap_known_hosts_entry: >
          {{ '[%s]:%s' | format(aap_host_ip, aap_port)
             if (aap_port | int) != 22 else aap_host_ip }}
        aap_keyscan_cmd: >
          {{ 'ssh-keyscan -H -p %s %s' | format(aap_port, aap_host_ip)
             if (aap_port | int) != 22 else
             'ssh-keyscan -H %s' | format(aap_host_ip) }}

    # ─────────────────────────────────────────────────────
    # Step 2 – Ensure host key is in ~/.ssh/known_hosts
    # ─────────────────────────────────────────────────────
    - name: Scan AAP host key (tolerate initial failure)
      ansible.builtin.command: "{{ aap_keyscan_cmd }}"
      register: keyscan_result
      changed_when: false     # we’re only gathering data
      failed_when: false      # don’t kill the play yet

    - name: Show ssh-keyscan stderr when it fails
      ansible.builtin.debug:
        msg: |
          ssh-keyscan failed (rc={{ keyscan_result.rc }}):
          {{ keyscan_result.stderr | default('') }}
      when: keyscan_result.rc != 0

    - name: Abort if we could not fetch the host key
      ansible.builtin.fail:
        msg: "Unable to retrieve SSH host key from {{ aap_host_ip }}:{{ aap_port }}"
      when: keyscan_result.rc != 0

    - name: Record AAP host SSH key in known_hosts
      ansible.builtin.known_hosts:
        name: "{{ aap_known_hosts_entry }}"
        key:  "{{ keyscan_result.stdout }}"
        hash_host: false
        state: present
        path: "{{ ansible_env.HOME }}/.ssh/known_hosts"

    # ─────────────────────────────────────────────────────
    # Step 3 – Verify connection with Ansible ping
    # ─────────────────────────────────────────────────────
    - name: Test password-less SSH connectivity
      ansible.builtin.ping:
      delegate_to: "{{ aap_host_ip }}"
      vars:
        ansible_user: "{{ aap_target_user }}"
        ansible_port: "{{ aap_port }}"
        ansible_ssh_private_key_file: "{{ aap_target_ssh_key }}"
