---
- name: Clone Ansible Demo Repository onto Jump Host
  hosts: jump
  gather_facts: false
  become: true

  vars:
    git_repo_url: "https://github.com/Deim0s13/ansible-cert-renewal-demo.git"
    repo_version: "main"
    repo_clone_path: "/home/rheluser/{{ git_repo_url | basename | regex_replace('\\.git$', '') }}"

  tasks:

    # ─────────────────────────────────────────────────────
    # Step 1: Ensure Git is Available
    # ─────────────────────────────────────────────────────
    - name: Ensure Git is installed on the Jump Host
      package:
        name: git
        state: present

    # ─────────────────────────────────────────────────────
    # Step 2: Check if destination path exists and is a Git repo
    # ─────────────────────────────────────────────────────
    - name: Stat the potential repository path
      stat:
        path: "{{ repo_clone_path }}"
      register: repo_path_stat

    - name: Check if .git subdirectory exists within the potential repository
      stat:
        path: "{{ repo_clone_path }}/.git"
      register: git_dir_stat
      # Only run this if the repo_clone_path actually exists and is a directory
      when: repo_path_stat.stat.exists and repo_path_stat.stat.isdir

    # ─────────────────────────────────────────────────────
    # Step 3: Clean up if directory exists but is NOT a Git repo
    # ─────────────────────────────────────────────────────
    - name: Remove non-git directory if it exists and is not a Git repo
      ansible.builtin.file:
        path: "{{ repo_clone_path }}"
        state: absent
      when: >
        repo_path_stat.stat.exists and
        repo_path_stat.stat.isdir and
        not git_dir_stat.stat.exists

    # ─────────────────────────────────────────────────────
    # Step 4: Ensure Git repository is present and up-to-date
    # ─────────────────────────────────────────────────────
    - name: Clone or pull Git repository
      become: true
      become_user: rheluser
      git:
        repo: "{{ git_repo_url }}"
        dest: "{{ repo_clone_path }}"
        version: "{{ repo_version }}"
        update: true

    # ─────────────────────────────────────────────────────
    # Step 5: Confirm Repo Path
    # ─────────────────────────────────────────────────────
    - name: Confirm Git repository is available on Jump Host
      debug:
        msg: "Repository is now available at {{ repo_clone_path }}"
