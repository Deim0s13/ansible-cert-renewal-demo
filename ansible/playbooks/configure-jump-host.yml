- name: Configure Jump Host
  hosts: jump
  become: true
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    # ── System Update ────────────────────────────────────────
    - name: Update all packages on the jump host
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: true
      tags: skip_ansible_lint

    # ── Core Tools ────────────────────────────────────────────
    - name: Ensure base packages are present
      ansible.builtin.package:
        name:
          - git
          - rsync
          - python3-pip
          - python3.11
          - python3.11-pip
          - tar
          - unzip
          - podman
        state: present

    # ── ruamel.yaml Support ──────────────────────────────────
    - name: Try to install ruamel.yaml via dnf
      ansible.builtin.package:
        name: python3-ruamel-yaml
        state: present
      register: dnf_ruamel
      failed_when: false

    - name: Install ruamel.yaml via pip if dnf not available
      when: dnf_ruamel.failed or (dnf_ruamel.rc is defined and dnf_ruamel.rc != 0)
      ansible.builtin.pip:
        name: ruamel.yaml
        state: present
        executable: /usr/bin/pip3.11

    - name: Verify ruamel.yaml presence
      ansible.builtin.command: >
        python3.11 -c "import importlib.util;
                       print('ruamel.yaml found:',
                       bool(importlib.util.find_spec('ruamel.yaml')))"
      register: ruamel_check
      changed_when: false
      failed_when: false

    - name: Show ruamel.yaml presence result
      ansible.builtin.debug:
        msg: "{{ ruamel_check.stdout.strip() }}"

    # ── Confirm pip is installed ─────────────────────────────
    - name: Ensure pip is installed for Python 3.11
      ansible.builtin.command: /usr/bin/python3.11 -m ensurepip --upgrade
      register: ensurepip_result
      changed_when: "'Successfully installed' in ensurepip_result.stdout"
      failed_when: ensurepip_result.rc != 0 and 'already satisfied' not in ensurepip_result.stdout

    # ── Ansible (User Install) ───────────────────────────────
    - name: Check current Ansible version
      become: false
      ansible.builtin.command: ~/.local/bin/ansible --version
      register: ansible_ver_check
      failed_when: false
      changed_when: false

    - name: Install Ansible (>=9.0,<10.0) under user context
      become: false
      ansible.builtin.pip:
        name: "ansible>=9.0,<10.0"
        executable: /usr/bin/pip3.11
        extra_args: --user
      environment:
        PATH: "{{ ansible_env.HOME }}/.local/bin:{{ ansible_env.PATH }}"
      when: "'ansible' not in ansible_ver_check.stdout or '9.' not in ansible_ver_check.stdout"

    # ── User Environment Setup ───────────────────────────────
    - name: Ensure ~/.bashrc has updated PATH for local bin
      ansible.builtin.lineinfile:
        path: /home/rheluser/.bashrc
        line: 'export PATH="$HOME/.local/bin:$PATH"'
        state: present
        create: true
        owner: rheluser
        group: rheluser
        mode: '0644'

    - name: Ensure ANSIBLE_CONFIG is set in ~/.bashrc
      ansible.builtin.lineinfile:
        path: /home/rheluser/.bashrc
        line: 'export ANSIBLE_CONFIG="/home/rheluser/ansible-cert-renewal-demo/ansible/ansible.cfg"'
        state: present
        create: true
        owner: rheluser
        group: rheluser
        mode: '0644'

    # ── Final Confirmation ───────────────────────────────────
    - name: Show installed Ansible version
      become: false
      ansible.builtin.command: ~/.local/bin/ansible --version
      register: final_ansible_ver
      changed_when: false

    - name: Confirm installation complete
      ansible.builtin.debug:
        msg: >
          Jump host is ready.
          Installed Ansible version: {{ final_ansible_ver.stdout_lines[0] }}
