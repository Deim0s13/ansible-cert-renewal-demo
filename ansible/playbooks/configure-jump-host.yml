---
# ─────────────────────────────────────────────────────────────
# Playbook: configure-jump-host.yml
# Purpose : Prepare the jump host for later automation
# ─────────────────────────────────────────────────────────────

- name: Configure Jump Host
  hosts: jump
  become: true
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3.11
    ansible_config_path: "/home/rheluser/ansible-cert-renewal-demo/ansible/ansible.cfg"
    user_bin_path: "/home/{{ ansible_user }}/.local/bin"
    user_pip: "/usr/bin/python3.11 -m pip"

  tasks:
    # ── Ensure Python 3.11 exists ───────────────────────────
    - name: Check Python 3.11 exists
      stat:
        path: /usr/bin/python3.11
      register: py311

    - name: Fail if Python 3.11 is not present
      fail:
        msg: "Python 3.11 is required for newer Ansible versions. Install it first."
      when: not py311.stat.exists

    # ── Update system packages ──────────────────────────────
    - name: Update all packages on the jump host
      dnf:
        name: '*'
        state: latest
        update_cache: true
      tags: skip_ansible_lint

    # ── Core tools ───────────────────────────────────────────
    - name: Ensure base packages are present
      package:
        name:
          - git
          - rsync
          - python3.11
          - python3-pip
          - tar
          - unzip
          - podman
        state: present

    # ── Install Ansible 2.16 with pip ───────────────────────
    - name: Install Ansible 2.16.x under user context
      become: false
      pip:
        name: "ansible>=2.16,<2.17"
        state: present
        executable: "{{ user_pip }}"
        extra_args: "--user"

    # ── Ensure ~/.local/bin is in PATH ──────────────────────
    - name: Add ~/.local/bin to PATH in .bashrc
      become: false
      lineinfile:
        path: ~/.bashrc
        line: 'export PATH="$HOME/.local/bin:$PATH"'
        state: present

    # ── Set ANSIBLE_CONFIG in .bashrc ───────────────────────
    - name: Set ANSIBLE_CONFIG in .bashrc
      become: false
      lineinfile:
        path: ~/.bashrc
        line: 'export ANSIBLE_CONFIG="{{ ansible_config_path }}"'
        state: present

    # ── Source .bashrc to refresh environment ───────────────
    - name: Source updated .bashrc
      become: false
      shell: source ~/.bashrc
      args:
        executable: /bin/bash

    # ── Install community.general collection ────────────────
    - name: Install community.general collection
      become: false
      command: >
        {{ user_bin_path }}/ansible-galaxy collection install community.general --force
      environment:
        PATH: "{{ user_bin_path }}:{{ ansible_env.PATH }}"
      args:
        creates: "~/.ansible/collections/ansible_collections/community/general"

    # ── ruamel.yaml for YAML callback ───────────────────────
    - name: Try to install ruamel.yaml via dnf
      package:
        name: python3-ruamel-yaml
        state: present
      register: dnf_ruamel
      failed_when: false

    - name: Install ruamel.yaml via pip if dnf fails
      when: dnf_ruamel is failed or (dnf_ruamel is defined and dnf_ruamel.rc | default(1) != 0)
      become: false
      pip:
        name: ruamel.yaml
        state: present
        executable: "{{ user_pip }}"

    - name: Verify ruamel.yaml installed
      become: false
      command: >
        /usr/bin/python3.11 -c "import importlib.util; print('ruamel.yaml found:', bool(importlib.util.find_spec('ruamel.yaml')))"
      register: ruamel_check
      changed_when: false

    - name: Show ruamel.yaml status
      debug:
        msg: "{{ ruamel_check.stdout.strip() }}"

    # ── Final message ───────────────────────────────────────
    - name: Jump host ready
      debug:
        msg: "✅ Jump host is ready. Python 3.11, Ansible 2.16, community.general, and ruamel.yaml installed. Environment updated."
