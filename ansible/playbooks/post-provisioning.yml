---
# ─────────────────────────────────────────────────────────────
# Playbook: post-provision.yml
# Purpose: Fully prepare the Jump Host
# ─────────────────────────────────────────────────────────────

- name: Post-Provisioning Automation on Jump Host
  hosts: jump
  become: true
  gather_facts: false

  vars:
    # Where the project repo will be cloned on the jump host
    target_dir: "{{ ansible_user_dir }}/{{ repo_url | basename | regex_replace('\\.git$', '') }}"
    # SSH key path passed from build-demo.sh
    private_key_path: "{{ private_key_path }}"

# ─────────────────────────────────────────────────────────────
# Step 0 – Inject SSH private key
# ─────────────────────────────────────────────────────────────
- name: Step 0 – Inject SSH Private Key to Jump Host
  import_playbook: copy-private-key.yml
  vars:
    private_key_path: "{{ private_key_path }}"

# ─────────────────────────────────────────────────────────────
# Step 1 – Configure the jump host (packages, ruamel.yaml, updates)
# ─────────────────────────────────────────────────────────────
- name: Step 1 – Configure the Jump Host
  hosts: jump
  become: true
  gather_facts: false
  tasks:
    # 1.1  Base RPMs you’ll need for later tasks or demos
    - name: Ensure base RPMs are present
      package:
        name:
          - python3
          - python3-pip
          - git
          - tar
          - unzip
          - podman          # if you plan to build EEs locally
        state: present

    # 1.2  Try to install ruamel.yaml via dnf first (EL9 repo pkg)
    - name: Install ruamel.yaml via dnf (if available)
      package:
        name: python3-ruamel-yaml
        state: present
      register: dnf_ruamel
      failed_when: false          # continue if package not found

    # 1.3  Fall back to pip if dnf didn’t provide it
    - name: Install ruamel.yaml via pip if dnf not available
      pip:
        name: ruamel.yaml
        state: present
        executable: /usr/bin/pip3
      when: dnf_ruamel is failed or
            (dnf_ruamel is defined and dnf_ruamel.rc|default(1) != 0)

    # 1.4  Verify ruamel.yaml import (debug only)
    - name: Verify ruamel.yaml present
      shell: python - <<'PY'
        import importlib.util, sys
        print("ruamel.yaml found:", bool(importlib.util.find_spec("ruamel.yaml")))
        PY
      register: ruamel_check
      changed_when: false

    - debug:
        msg: "{{ ruamel_check.stdout.strip() }}"

# ─────────────────────────────────────────────────────────────
# Step 2 – Clone Git repository to jump host
# ─────────────────────────────────────────────────────────────
- name: Step 2 – Clone Git Repository
  import_playbook: clone-repo-to-jump.yml
