---
- name: Resize and mount /opt on AAP node
  hosts: aap
  become: true
  gather_facts: false

  vars:
    opt_lv_size: 20g
    opt_mount_point: /opt
    opt_lv_name: optlv
    vg_name: rootvg

  tasks:

    # ─────────────────────────────────────────────────────
    # Step 0: Check available space in rootvg
    # ─────────────────────────────────────────────────────
    - name: Debug rootvg free space
      command: vgdisplay {{ vg_name }}
      register: vgdisplay_output
      changed_when: false

    - name: Print rootvg space
      debug:
        var: vgdisplay_output.stdout_lines

    # ─────────────────────────────────────────────────────
    # Step 1: Create Logical Volume for /opt
    # ─────────────────────────────────────────────────────
    - name: Create logical volume for /opt
      lvol:
        vg: "{{ vg_name }}"
        lv: "{{ opt_lv_name }}"
        size: "{{ opt_lv_size }}"
        state: present
      register: create_lv_result # This will be populated. changed: true if created, false if already exists.
      ignore_errors: false

    # ─────────────────────────────────────────────────────
    # NEW STEP: Verify if the LV actually exists after the lvol task.
    # This will be the definitive check for subsequent 'when' conditions.
    # ─────────────────────────────────────────────────────
    - name: Verify optlv exists after creation attempt
      command: "lvdisplay /dev/{{ vg_name }}/{{ opt_lv_name }}"
      register: lv_exist_check
      failed_when: lv_exist_check.rc != 0 # This task will fail if LV doesn't exist
      changed_when: false
      # This 'when' condition is simple: run if the lvol task just changed OR if lvdisplay would have previously failed (meaning it didn't exist)
      # Or, for simplicity, just run it always after the lvol task. It's idempotent.
      # when: create_lv_result.changed or ("Failed to find logical volume" in create_lv_result.stderr | default(''))

    # ─────────────────────────────────────────────────────
    # Step 1.5 (moved the debug after the existence check)
    # ─────────────────────────────────────────────────────
    - name: Print LV creation result (full output for debugging)
      debug:
        var: create_lv_result
        verbosity: 1 # Keep this to see the output with -vvv

    # ─────────────────────────────────────────────────────
    # Step 2: Format the LV with XFS
    # ─────────────────────────────────────────────────────
    - name: Create filesystem on the new logical volume
      filesystem:
        fstype: xfs
        dev: "/dev/{{ vg_name }}/{{ opt_lv_name }}"
      # Now, only run if the LV verification task succeeded.
      # We assume if lv_exist_check.rc == 0, the LV exists.
      when: lv_exist_check.rc == 0

    # ─────────────────────────────────────────────────────
    # Step 3: Ensure /opt Exists
    # ─────────────────────────────────────────────────────
    - name: Ensure /opt directory exists
      file:
        path: "{{ opt_mount_point }}"
        state: directory

    # ─────────────────────────────────────────────────────
    # Step 4: Mount /opt
    # ─────────────────────────────────────────────────────
    - name: Mount /opt
      mount:
        path: "{{ opt_mount_point }}"
        src: "/dev/{{ vg_name }}/{{ opt_lv_name }}"
        fstype: xfs
        opts: defaults
        state: mounted
      # Only attempt to mount if the LV verification task succeeded.
      when: lv_exist_check.rc == 0

    # ─────────────────────────────────────────────────────
    # Step 5: Persist /opt Mount in fstab
    # ─────────────────────────────────────────────────────
    - name: Make /opt mount persistent
      mount:
        path: "{{ opt_mount_point }}"
        src: "/dev/{{ vg_name }}/{{ opt_lv_name }}"
        fstype: xfs
        opts: defaults
        state: present
      # Only persist if the LV verification task succeeded.
      when: lv_exist_check.rc == 0

    # ─────────────────────────────────────────────────────
    # Step 6: Confirm mount success
    # ─────────────────────────────────────────────────────
    - name: Check mount target
      command: mountpoint {{ opt_mount_point }}
      register: mountpoint_check
      failed_when: mountpoint_check.rc != 0
      changed_when: false
      # Only check if the mount was attempted.
      when: lv_exist_check.rc == 0
