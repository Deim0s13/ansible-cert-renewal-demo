---
- name: Ensure prerequisite RPMs are present
  package:
    name:
      - python3
      - podman
      - tar
      - unzip
    state: present

- name: Ensure /opt exists
  file:
    path: "/opt"
    state: directory
    mode: "0755"

# ─────────────────────────────────────────────────────────────
# Copy the bundle only if it is not already on the AAP VM
# ─────────────────────────────────────────────────────────────
- name: Check if bundle already exists on AAP node
  stat:
    path: "{{ aap_bundle_dest }}"
  register: bundle_stat

- name: Rsync bundle from jump host to AAP node
  synchronize:
    src: "{{ aap_bundle_src }}"
    dest: "{{ aap_bundle_dest }}"
    mode: push
    rsync_opts:
      - "--chmod=0644"
    use_ssh_args: true
  delegate_to: jump-host
  when: not bundle_stat.stat.exists

# ─────────────────────────────────────────────────────────────
# Extract bundle
# ─────────────────────────────────────────────────────────────
- name: Check if setup directory already extracted
  stat:
    path: "{{ aap_setup_dir }}"
  register: setup_dir_stat

- name: Extract bundle on AAP node
  unarchive:
    src: "{{ aap_bundle_dest }}"
    dest: "/opt"
    remote_src: yes
  when: not setup_dir_stat.stat.exists

# ─────────────────────────────────────────────────────────────
# Drop single‑node inventory file (secrets hidden from logs)
# ─────────────────────────────────────────────────────────────
- name: Create single‑node inventory
  copy:
    dest: "{{ aap_setup_dir }}/inventory"
    mode: "0600"
    content: |
      [automationcontroller]
      {{ inventory_hostname }}

      [all:vars]
      admin_password='{{ aap_admin_password }}'
      pg_host=''
      pg_port='5432'
      pg_database='awx'
      pg_username='awx'
      pg_password='{{ aap_pg_password }}'
      registry_url='{{ aap_registry_url }}'
  no_log: true

# ─────────────────────────────────────────────────────────────
# Run the installer
# ─────────────────────────────────────────────────────────────
- name: Execute ./setup.sh on the AAP VM
  command: ./setup.sh
  args:
    chdir: "{{ aap_setup_dir }}"
  register: aap_install
  changed_when: "'Complete' in aap_install.stdout"
  environment:
    ANSIBLE_FORCE_COLOR: "true"
  no_log: true # prevents secret leakage in verbose output

- name: Show tail of installer log (harmless)
  debug:
    var: aap_install.stdout_lines[-20:]
