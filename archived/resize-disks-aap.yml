---
# ─────────────────────────────────────────────────────────────
# Playbook : resize-disks-aap.yml  
# Purpose  : Expand disk space for AAP installation
#            - Ensures /opt has sufficient space for installer extraction
#            - Ensures /var has space for installation files
#            - Safe, non-destructive approach using LVM
# ─────────────────────────────────────────────────────────────

- name: Resize LV backing /opt on AAP node
  hosts: aap
  gather_facts: false
  become: true

  vars:
    vg_name       : "rootvg"      # ← only the VG is fixed
    new_lv_size   : "60g"         # ← desired target size
    mount_point   : "/opt"

  tasks:
    # ───────────────────────────────────────────────────────
    # Step 1 ▸ Identify the current LV path for /opt
    # ───────────────────────────────────────────────────────
    - name: Find LV backing {{ mount_point }}
      command: findmnt -no SOURCE {{ mount_point }}
      register: lv_source
      changed_when: false

    - name: Fail if {{ mount_point }} is not a logical volume
      fail:
        msg: "{{ mount_point }} is mounted on {{ lv_source.stdout }}, not an LVM LV."
      when: lv_source.stdout is not search('^/dev/mapper/')

    - name: Set facts for VG & LV names
      set_fact:
        lv_device : "{{ lv_source.stdout }}"                                 # /dev/mapper/rootvg-optlv
        lv_name   : "{{ (lv_source.stdout | basename).split('-', 1)[1] }}"   # optlv  (after first ‘-’)
      # Explanation:
      #   basename(rootvg-optlv) → rootvg-optlv
      #   split('-',1)[1]        → optlv

    # ───────────────────────────────────────────────────────
    # Step 2 ▸ Show current sizes for context
    # ───────────────────────────────────────────────────────
    - name: VG free space
      command: vgdisplay {{ vg_name }}
      register: vg_info
      changed_when: false

    - name: LV size before resize
      command: lvdisplay "{{ lv_device | regex_replace('mapper', 'dev') }}"
      # converts /dev/mapper/rootvg-optlv → /dev/dev/rootvg-optlv → still
      # works but simpler to skip if lvdisplay fails—optional.
      register: lv_info
      changed_when: false
      ignore_errors: true

    - name: Show current VG/LV information
      debug:
        msg:
          - "{{ (vg_info.stdout_lines | select('search','Free.*Size')).list }}"
          - "{{ (lv_info.stdout_lines | select('search','LV Size')).list | default('LV display skipped') }}"

    # ───────────────────────────────────────────────────────
    # Step 3 ▸ Extend LV & filesystem in one shot
    # ───────────────────────────────────────────────────────
    - name: Extend {{ lv_name }} to {{ new_lv_size }} & grow XFS
      community.general.lvol:
        vg       : "{{ vg_name }}"
        lv       : "{{ lv_name }}"
        size     : "{{ new_lv_size }}"
        resizefs : true
        state    : present

    # ───────────────────────────────────────────────────────
    # Step 4 ▸ Verify new capacity
    # ───────────────────────────────────────────────────────
    - name: Confirm {{ mount_point }} size after resize
      command: df -h {{ mount_point }}
      register: df_opt
      changed_when: false

    - name: Show updated /opt usage
      debug:
        var: df_opt.stdout_lines
